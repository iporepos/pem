# STYLE WORKFLOW CONFIGURATION FILE
# #######################################################################
# Configuration file for checking code style consistency
# GitHub CI services (GitHub Actions and GitHub Pages)


# TEMPLATE INSTRUCTIONS
# ***********************************************************************
# 1) look for '[CHANGE THIS]' for mandatory modifications
# 2) look for '[CHECK THIS]' for possible modifications
# 3) look for '[EXAMPLE]' for simple examples (comment or uncomment it if needed)
# 4) look for '[ADD MORE IF NEDDED]' for possible extra features
# 5) placeholders are designated by curly braces: {replace-this}


# WORKFLOW FILE
# ***********************************************************************

# Workflow
# =======================================================================
name: tests

# Triggers
# =======================================================================
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Permissions
# =======================================================================
# no permissions

# JOBS
# =======================================================================
jobs:
  # BUILD JOB
  black:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Get your code
      # -----------------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup Python environment
      # -----------------------------------------------------------------
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # <-- [CHECK THIS] Specs the version you use locally

      # Step 3: Install dev dependencies
      # -----------------------------------------------------------------
      - name: Install dependencies
        # V [CHECK THIS] use the appropriate package manager
        # V [CHECK THIS] include extra testing dependencies if needed
        run: |
          python -m pip install --upgrade pip 
          pip install .

      # Step 4: Run unit tests
      # -----------------------------------------------------------------
      - name: Run Tests
        run: python -m unittest discover -s tests -p "test_*.py"